Este proyecto está basado en esta serie de vídeos: https://www.youtube.com/watch?v=lBKNyxjeHgg&list=PLbbXVB88ZrRERkUOw4BmnIyPT_FXUZH8u


1- Python refresher


2- Website 1: Word Count
El fichero urls.py redireccionará a cualquier fichero html la petición recibida. Para ello, en el path, hay que indicar cuál es el recurso por el que se pregunta y cuál es la función que contiene la respuesta. Esta función hay que definirla en views.py.

Para que se devuelva un fichero html, hay que crear un directorio al mismo nivel que la aplicación wordcount. Le ponemos templates y en la directiva DIRS de TEMPLATES en el fichero settings, añadimos que se encuentran en ese directorio.
Para usarlo en la función definida en views, hay que importar render.
A render hay que pasarle el objeto request y el nombre de la template
Con comas se le pueden pasar objetos que se usen en el html, por ejemplo un diccionario, que se accede con {{ clave }}

En el tutorial, después, a la página de inicio le añade una textarea y un botón. ESte botón nos llevará a otra página 'count'. Por si quisieramos cambiar el nombre de este recurso, en la action del form ponemos {% url 'count' %} y así nos llevará al recurso que tenga ese nombre. Para ello en las url hay que añadir name='count'

Si escribimos algo y hacemos click en el botón, en la url veremos fulltext=textoquehayamosmetido. Esto se accede en la funcion count, con request.GET['fulltext']


3- GIt


4- Website 2: Portfolio


5- Publishing a website


6- Website 3: Product Hunt Clone
